@import url(https://fonts.googleapis.com/css?family=Oswald:400,700,300);



@black: #555;
@white: #ffffff;
@control-color: rgb(221, 221, 221);

#note-creator {
#message {
    color: @note-font-color;
    height: auto !important;
    text-align: left;
    * {
        font-size: 14px;
    }
    .ql-format-group {
        margin-right: 0;
    }
}

.centered {
  margin: 0 auto;
  text-align: center;
}

.uppercase {
  text-transform: uppercase;
}

::-webkit-resizer {
  display: none;
}

body * {
  outline: none !important;
}

header h1 {
  .uppercase;
  .centered;
  background-color: @white;
  box-shadow: 0px 0px 100px rgba(0,0,0,0.05);
  color: @black;
  font-weight: 300;
  width: 300px;
  padding: 10px 0px 10px 0px;
  letter-spacing: 4px;
}

section {
  .centered;
}

form#note-creation-form {
  .centered;
  width: 90%;
  padding: 20px;
  background-color: @white;
    .create-note-btn {
        width: 100px;
    }
}
.host {
    margin: 0;
}
.tags {
    border: none;
    box-shadow: none;
    .tag-item {
        border: none;
        border-radius: 0;
        background: none;
        color: @control-color;
    }
}

.form-control {
  //.uppercase;

  border-radius: 0;
  background-color: @white;
  outline: none;
  border: none;
  -webkit-box-shadow: none !important;
  -moz-box-shadow: none !important;
  box-shadow: none !important;
  border-bottom: 1px solid @control-color;
}


button#remove-few-notes,
button#create-new-note {
  .uppercase;
  letter-spacing: 4px;
}


.clearfix()
{
    .ie7 &
    {
        *zoom			:1;
    }

    &:before, &:after
    {
        display			:table;
        content			:"";
    }

    &:after
    {
        clear			:both;
    }
}

.opacity(@opacity)
{
    opacity :@opacity;
    @msopacity :@opacity * 100;
    filter :~"alpha(opacity=@{msopacity})";
}

.transition(@prop, @transition)
{
  -webkit-transition :~"-webkit-@{prop}" @transition;
     -moz-transition :~"-moz-@{prop}" @transition;
      -ms-transition :~"-ms-@{prop}" @transition;
       -o-transition :~"-o-@{prop}" @transition;
          transition :@prop @transition;
}
.stars
{
    @star_size: 30px;
    @star_number: 5;
    background: url("https://dl.dropboxusercontent.com/u/683504/www.codepen.io/stars.png") repeat-x 0 0;
    width :@star_size * @star_number;
    .clearfix();

    input[type="radio"]
    {
        position:absolute;
        .opacity(0);
        .starX (@index) when (@index > 0)
        {
            &.star-@{index}:checked
            {
                ~ span
                {
                    width:((100 / @star_number) * @index) + 0%;
                }
            }
            .starX(@index - 1);
        }
        .starX(@star_number);
    }

    label
    {
        display: block;
        width: @star_size;
        height: @star_size;
        margin: 0!important;
        padding: 0!important;
        text-indent: -999em;
        float:left;
        position:relative;
        z-index:10;
        background: transparent!important;
        cursor: pointer;
        &:hover
        {
            ~ span
            {
                background-position	:0 -@star_size;
            }
        }
        .starX (@index) when (@index > 0)
        {
            &.star-@{index}:hover
            {
                ~ span
                {
                    width		:((100 / @star_number) * @index) + 0%!important;
                }
            }
            .starX(@index - 1);
        }
        .starX(@star_number);
    }

    span
    {
        display :block;
        height :@star_size;
        width :0;
        position:relative;
        top:0;
        left:0;
        height:@star_size;
        background: url("https://dl.dropboxusercontent.com/u/683504/www.codepen.io/stars.png") repeat-x 0 -(@star_size * 2);
        .transition(width, 0.5s);
    }
}

}
